{
    "comment": "Engineering resume. Highly technical.",
    "extends": [
        "components/base.json",
        "components/work.json",
        "components/publications.json",
        "components/volunteer.json"
    ],
    "meta": {
        "version": "2.1",
        "lastModified": "2024-12-10"
    },
    "basics": {
        "label": "And I make things",
        "intro": "I'm a problem-solver by nature and by profession. I have a natural drive to find solutions to problems spoken and unspoken. By digging down through pain points, I excel in finding the heart of issues and coming up with the best solution within the constraints of the environment.\n\nWhile I've historically specialized in PHP, I always enjoy learning new things, and have recently been neck-deep in React and Electron while at a Ruby on Rails shop, and had a lot of fun dabbling in Rust and Tauri. I've also been eyeing software architecture and program management as potential roles to grow into.",
        "summary": "Senior Software Engineer with 10+ years of experience specializing in full-stack development, system architecture, and technical leadership. Demonstrated expertise in Ruby, JavaScript, and PHP, with a proven track record of delivering high-impact solutions resulting in $650k+ annual savings through technical optimization. Strong background in flexible work environments, successfully leading teams and projects across various collaboration models. Accomplished in rapidly adapting to new technologies and environments while maintaining high-quality deliverables."
    },
    "projects": [
        {
            "name": "Deployment Notification Automation Initiative",
            "entity":"Custom Ink",
            "description": "As a side-effect of a facility slowdown situation, there was an appetite for better deployment notifications. However, the interim solution that had been implemented was very manual and cumbersome. So, I collaborated with several engineering managers of other teams to come up with and orchestrate the implementation of an automated notification system.\n\nAs part of a long-term, cross-team initiative, we came up with a plan to use Github pull requests to provide the content and the trigger of a notification that would describe in plain language what the change was doing and why, the level of risk for the deploy, and link to supplemental outputs of the development process (including the issue tracking item, project pitches, architectural decision records, Slack discussions, and anything else relevant). The automated system was then intended to take the pull request contents, display a portion of it on a unified dashboard, with a link to the full pull request for technical stakeholders, and send an email out to those who wanted it.\n\nAs of the time of my departure, we had taken several steps to bringing the pull requests into alignment with this vision, including working out with a broader collection of engineers a \"bring your own process\" for assessing the risk of a change while using the same output chart to serve as a common \"language\" to stakeholders, and were evaluating our existing tools and past projects to see what existing work we could leverage in this new vision.",
            "highlights": [
                "Created a new method for teams to communicate the risk of deploying a given pull request",
                "Created a way for teams to determine their own criteria, while still distilling it down to a final set of values common across teams",
                "Designed a system to automate nearly all steps in a manual and error-prone process",
                "Created a pull request template to provide information to both technical and non-technical stakeholders about the changes made in the pull request"
            ],
            "keywords": [
                "Cross-team Problem Solving",
                "Multi-system Architecture",
                "Process Improvement",
                "Process Automation"
            ],
            "startDate": "2023-08",
            "endDate": "2023-12"
        },
        {
            "name": "Digital Print Workflow Platform",
            "entity": "Custom Ink",
            "description": "I implemented the new shipping interface, allowing the production team to use the Electron application from start to finish for every task, where previously, they needed to switch tools for some tasks. During this implementation, I brought large portions of the codebase up to modern standards, converting the React class-based components to function-based components, and integrating React Router and our in-house component library. I also began the process of reorganizing the file structure to modern standards to allow for better maintainability as the application grew in complexity.",
            "highlights": [
                "Led distributed team development of Electron/React application",
                "Implemented new shipping interface resulting in **$210k annual cost savings**",
                "Modernized codebase to current React standards",
                "Created automated release process using CircleCI and GitHub Releases"
            ],
            "keywords": [
                "Electron",
                "React",
                "React Router",
                "Refactoring",
                "Github Releases",
                "CircleCI"
            ],
            "startDate": "2022-01",
            "endDate": "2023-12"
        },
        {
            "name": "Production Prioritization System",
            "entity":"Custom Ink",
            "description": "I wrote the new algorithm for prioritizing orders in the screenprinting process and as part of a team, overhauled the process for 20% increase in efficiency, a significant increase in our \"delivered error-free, on-time\" metrics, and near-elimination of facility-created \"rush\" orders.<br>The new process selected orders to batch together on a cart based on numerous factors, including number of screens needed, completion deadline, number of colors, and more.\n\nImpact: $440k annual production cost savings",
            "highlights": [
                "**Impact:** 20% increase in prioritization efficiency",
                "**Impact:** $440k cost savings per year",
                "Created complex algorithm to determine most efficient prioritization"
            ],
            "keywords": [
                "Ruby",
                "Rails",
                "Automation"
            ],
            "startDate": "2022-12",
            "endDate": "2023-07"
        },
        {
            "name": "Shopify-Netsuite Integration",
            "entity": "Rocket Code",
            "description": "I built a fully unit-tested, custom, bi-directional, ETL integration layer to allow Shopify act as the store's online storefront.\n\nThis layer:<ul><li>Took orders from Shopify and sent them to Netsuite for fulfillment<li>Took Netsuite's fulfillment updates and sent them to Shopify for customer updates<li>Took inventory information from Netsuite and sent it to Shopify, transforming it to allow for the automatic creation of products, variants, and collections, and with the use of tags, populate collections such that the custom storefront displayed them as single products (necessary due to the number of variants for the products)<li>Synced gift card information between Shopify and Netsuite to enable customers to use their brick-and-mortar store-created gift cards on the website</ul>",
            "highlights": [
                "Created robust, bidirectional ETL",
                "Responsible for planning, architecture, and implementation",
                "Created gift card conversion system"
            ],
            "keywords": [
                "PHP",
                "PHPUnit",
                "Laravel",
                "Shopify API",
                "ETL"
            ],
            "startDate": "2017-01",
            "endDate": "2017-05"
        }
    ],
    "skills": [
        {
            "name": "C++",
            "level": "Foundational",
            "keywords": [
                "Make",
                "Ninja",
                "Clang"
            ]
        },
        {
            "name": "PHP",
            "level": "Master",
            "keywords": [
                "Laravel",
                "7.1",
                "5.3"
            ]
        },
        {
            "name": "Ruby",
            "level": "Master",
            "keywords": [
                "Rails",
                "Minitest",
                "Rspec"
            ]
        },
        {
            "name": "Javascript",
            "level": "Master",
            "keywords": [
                "React",
                "Vue",
                "Electron",
                "NodeJS",
                "Webpack",
                "NodeJS",
                "Jest",
                "Mocha"
            ]
        },
        {
            "name": "Python",
            "level": "Advanced",
            "keywords": [
                "Pytest"
            ]
        },
        {
            "name": "CSS",
            "level": "Master",
            "keywords": [
                "Less",
                "SASS"
            ]
        },
        {
            "name": "Database",
            "level": "Master",
            "keywords": [
                "SQL",
                "Data Modeling",
                "Database Design",
                "MySQL",
                "MariaDB",
                "Redis"
            ]
        },
        {
            "name": "Operating Systems",
            "level": "Master",
            "keywords": [
                "Linux",
                "Mac",
                "Windows"
            ]
        },
        {
            "name": "Infrastructure & DevOps",
            "level": "Advanced",
            "keywords": [
                "Docker",
                "Dev Containers",
                "Kubernetes",
                "Infrastructure as Code",
                "CircleCI",
                "Travis CI",
                "Github Actions"
            ]
        }
    ]
}
